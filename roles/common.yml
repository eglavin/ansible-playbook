- name: Run common tasks
  hosts: "localhost"
  tasks:
    - name: Refresh apt
      ansible.builtin.apt:
        update_cache: true
        upgrade: true
      become: true
      when: ansible_facts["os_family"] == "Debian"

    - name: Install apt packages
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      with_items:
        - curl
        - git
        - bat
        - btop
        - fzf
        - nmap
        - python3-pip
        - stow
        - zsh
        - jq
      become: true
      when: ansible_facts["os_family"] == "Debian"

    - name: Install snap packages
      ansible.builtin.snap:
        name: "{{ item }}"
        state: present
      with_items:
        - yq
      become: true
      when: ansible_facts["os_family"] == "Debian"

    - name: Install zoxide
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          curl -sS https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | bash
        executable: /bin/zsh
        creates: /home/{{ ansible_user_id }}/.local/bin/zoxide
      when: ansible_facts["os_family"] == "Debian"

    - name: Download neovim
      ansible.builtin.get_url:
        url: https://github.com/neovim/neovim/releases/latest/download/nvim-linux64.tar.gz
        dest: /tmp/nvim-linux64.tar.gz
        mode: "0440"
      become: true
      when: ansible_facts["os_family"] == "Debian"

    - name: Remove opt nvim folder
      ansible.builtin.file:
        path: /opt/nvim
        state: absent
      become: true
      when: ansible_facts["os_family"] == "Debian"

    - name: Unarchive neovim
      ansible.builtin.unarchive:
        src: /tmp/nvim-linux64.tar.gz
        dest: /opt
        remote_src: true
      become: true
      when: ansible_facts["os_family"] == "Debian"

    - name: Refresh Homebrew
      community.general.homebrew:
        update_homebrew: true
        upgrade_all: true
      when: ansible_facts["os_family"] == 'Darwin'

    - name: Install Homebrew packages
      community.general.homebrew:
        name: "{{ item }}"
        state: present
      loop:
        - curl
        - git
        - bat
        - btop
        - ffmpeg
        - fzf
        - go
        - neovim
        - nmap
        - stow
        - zoxide
        - jq
        - yq
      when: ansible_facts["os_family"] == 'Darwin'
